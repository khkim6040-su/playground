name: after-commit-on-main-workflow-run
on:
  workflow_run:
    workflows: ["nope"]
    types:
      - completed

permissions:
  contents: write

jobs:
  edit-bot-md:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TRIGGER_COMMIT_ON_MAIN }} # 여기 PAT 토큰을 사용해야 github bot이 main에 커밋을 할 수 있음
          

      - name: Update BOT2.md
        run: |
          echo "This is a test commit from the **edit-bot-md-after-specific-workflow-run workflow**." > BOT2.md
          echo "Current date and time: $(date)" >> BOT2.md
          cat BOT2.md

      - name: Commit changes
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git diff --quiet && echo "No changes to commit" && exit 0
          git add BOT2.md

          COMMIT_MESSAGE="[BOT] BOT2.md 업데이트"
          git commit -m "$COMMIT_MESSAGE"

          sleep 10

      - name: Push changes
        id: push
        env: 
          TARGET_BRANCH: main 
        run: |
          REMOTE_REPO="https://oauth2:${{ secrets.TRIGGER_COMMIT_ON_MAIN }}@github.com/${{ github.repository }}.git"

          MAX_RETRIES=5
          COUNT=0
          while ! git push "$REMOTE_REPO" "HEAD:$TARGET_BRANCH"; do 
            if [ $COUNT -ge $MAX_RETRIES ]; then
              echo "Failed to push changes after $MAX_RETRIES attempts."
              exit 1
            fi
            COUNT=$((COUNT + 1))
            echo "Push failed, retrying... ($COUNT/$MAX_RETRIES)"
            git pull --rebase "$REMOTE_REPO" "$TARGET_BRANCH"
            sleep 5
          done

      - name: Get commit hash
        run: |
          echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "Push step outputs: ${{ toJson(steps.push.outputs) }}"

      - name: Make commit URL
        run: |
          echo "COMMIT_URL=${{ github.server_url }}/${{ github.repository }}/commit/${{ env.COMMIT_HASH }}" >> $GITHUB_ENV