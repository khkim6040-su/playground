name: "send fail slack notification"
description: "Send fail slack notification"

inputs:
  message:
    description: "추가 메시지"
    required: false
    default: ""
  channel:
    description: "어느 채널에 보낼 지 incomming webhook url"
    required: false
  channel_id:
    description: "보낼 채널의 ID"
    required: false
  thread_ts:
    description: "스레드 댓글을 달 메세지의 타임스탬프. channel_id와 함께 사용되어야 함"
    required: false
  token:
    description: "슬랙 봇 토큰"
    required: true

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      if: ${{ !(inputs.channel != '' || (inputs.channel_id != '' && inputs.thread_ts != '')) }}
      shell: bash
      run: |
        echo "Either 'channel' or 'channel_id' and 'thread_ts' must be provided."
        exit 1

    - name: Build payload
      shell: bash
      env:
        repository: ${{ github.repository }}
        workflow: "test_workflow"
        sha: "test_sha"
        ref: "test_ref"
        actor: "test_actor"
        run_id: "test_run_id"
        extra_message: ${{ inputs.message }}
        # 워크플로우가 push event로 트리거된 경우에만 이 경로로 커밋 메시지가 들어옴
        commit_message: "test_commit_message"

      run: |
        python .github/actions/slack/main.py \
          --repository "$repository" \
          fail \
          --workflow "$workflow" \
          --commit-sha "$sha" \
          --ref "$ref" \
          --actor "$actor" \
          --run-id "$run_id" \
          --commit-msg "$commit_message" \
          --channel_id "${{ inputs.channel_id }}" \
          --thread-ts "${{ inputs.thread_ts }}" \
          --extra-msg "$extra_message" > payload.json

        echo "::group::debug payload (cat)"
        cat payload.json
        echo "::endgroup::"
        echo "::group::debug payload (jq)"
        jq . < payload.json
        echo "::endgroup::"

    - shell: bash
      if: inputs.channel != '' && inputs.channel_id == '' && inputs.thread_ts == ''
      env:
        webhook_url: ${{ inputs.channel }}
      run: |
        curl -X POST "$webhook_url" \
          -H 'Content-type: application/json' \
          --data-binary "@payload.json"

    - name: Send Slack notification with thread reply
      if: inputs.channel_id != '' && inputs.thread_ts != ''
      uses: slackapi/slack-github-action@v2.0.0
      with:
        method: chat.postMessage
        token: ${{ inputs.token }}
        payload-file-path: payload.json

    # - shell: bash
    #   name: Send Slack notification with thread reply by curl
    #   run: |
    #     curl -X POST https://slack.com/api/chat.postMessage \
    #       -H "Authorization: Bearer ${{ inputs.token }}" \
    #       -H "Content-Type: application/json" \
    #       --data-binary "@payload.json"












